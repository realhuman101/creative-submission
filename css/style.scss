* {
    font-family: 'Nunito', sans-serif;

    &:focus,
    &:focus-within {
        outline: none;
    }
}

html,
body {
    height: 100%;
    margin: 0;
}

body {
    overflow: hidden;
}

section {
    height: 100vh;
    display: flex;

    & div {
        height: 100%;
        width: 50%;
        display: inline-flex;
        position: relative;
        justify-content: center;
        align-self: center;
        flex-direction: column;
        gap: 10px;

        &.char {
            position: relative;
            background-color: white;
        }

        &.charHead {
            width: 85px;
            height: 85px;
            border-radius: 100%;
        }

        &.charBody {
            width: 130px;
            height: 215px;
            border-radius: 30px 30px 8.5px 8.5px;
        }
    }

    & [name="firstHalf"] {
        background-color: #5ea1ff;
    }

    & [name="secondHalf"] {
        background-color: #ff80ae;
    }

    & #equal {
        position: absolute;
        left: 0; 
        right: 0; 
        margin-left: auto; 
        margin-right: auto;
        width: 115px;
        height: 100px;
        display: block;
        z-index: 100;
        transition: all .35s ease-in-out;

        & span {
            display: inline-flex;
            flex-direction: column;
            gap: 20%;
            position: relative;
            width: inherit;
            height: inherit;
            border-radius: 3px;

            &::before {
                content: '';
                display: block;
                width: 100%;
                height: 33%;
                background-color: white;
                border-radius: inherit;
            }

            &::after {
                content: '';
                display: block;
                width: 100%;
                height: 33%;
                background-color: white;
                border-radius: inherit;
            }
        }

        &:hover,
        &:focus {
            width: 125px;
            height: 110px;
            cursor: pointer;

            & ~ #wheel div {
                display: flex;
                
                @for $i from 1 through 5 {
                    &:nth-child(#{$i}) {
                        transform: rotate((($i - 1)*72)+deg) translateX(15vw);
                    }
                }
            }
        }
    }
}

@mixin spinAnimate ($rotateVal, $num) {   
    animation: spin#{$num} 5s linear infinite;

    & img {
        transform: rotate((-1 * (($num - 1)*72))+deg);
        animation: stay#{$num} 5s linear infinite;
    }

    @keyframes spin#{$num} {
        to {
            transform: rotate((360 + $rotateVal)+deg) translateX(15vw);
        }
    }

    @keyframes stay#{$num} {
        to {
            transform: rotate((-1 * (360 + $rotateVal))+deg);
        }
    }

    @supports (rotate: 1turn) {
        @keyframes spin#{$num} {
            to {
                rotate: 1turn;
            }
        }

        @keyframes stay#{$num} {
            to {
                rotate: -1turn;
            }
        }
    }
}

#wheel {
    position: absolute;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;
    text-align: center;
    z-index: 5;
    width: 100%;
    height: 100%;

    & div {
        display: none;
        border-radius: 100%;
        position: absolute;
        transition: transform 1s ease-in-out;
        margin-left: auto;
        margin-right: auto;
        left: 0;
        right: 0;
        text-align: center;
        width: 150px;
        height: 150px;
        z-index: 10;

        &:nth-child(1) {
            background-color: rgb(249, 106, 106);
        }

        &:nth-child(2) {
            background-color: rgb(106, 249, 108);
        }

        &:nth-child(3) {
            background-color: rgb(106, 230, 249);
        }

        &:nth-child(4) {
            background-color: rgb(230, 249, 106);
        }

        &:nth-child(5) {
            background-color: rgb(249, 187, 106);
        }

        @for $i from 1 through 5 {
            &:nth-child(#{$i}) {
                transform: rotate((($i - 1)*72)+deg) translateX(0vw);
                @include spinAnimate((($i - 1)*72),$i);
            }
        }
    }
}